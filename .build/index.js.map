{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import express from \"express\";\nimport session from \"express-session\";\nimport expressLayouts from \"express-ejs-layouts\";\nimport { MongoClient, ServerApiVersion, ObjectId } from \"mongodb\";\n\nconst DATABASE_URL = `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@smartlist-events.4zcyg.mongodb.net/Smartlist-Events?retryWrites=true&w=majority`;\n\nfunction eventInfo(id: string, req): Promise<Array> {\n  return new Promise((resolve, reject) => {\n    if (id.length !== 24) {\n      resolve(false);\n      return;\n    }\n    if (req.session.eventCache) {\n      resolve(req.session.eventCache);\n      return;\n    }\n    MongoClient.connect(DATABASE_URL, (err, db: any) => {\n      if (err) throw err;\n      let dbo = db.db(\"Events\");\n      let query = { _id: new ObjectId(id) };\n      dbo\n        .collection(\"EventList\")\n        .find(query)\n        .toArray((err: any, result: any) => {\n          if (err) throw err;\n          result = result[0];\n          req.session.eventCache = result;\n          resolve(result);\n          db.close();\n        });\n    });\n  });\n}\nfunction eventData(parent: string, table: string): Promise<Array> {\n  return new Promise((resolve, reject) => {\n    MongoClient.connect(DATABASE_URL, (err, db: any) => {\n      if (err) throw err;\n      let dbo = db.db(\"Events\");\n      let query = { parent: new ObjectId(parent) };\n      dbo\n        .collection(table)\n        .find(query)\n        .toArray((err: any, result: any) => {\n          if (err) throw err;\n          resolve(result);\n          db.close();\n        });\n    });\n  });\n}\n\nfunction createEventData(data: Object, table: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    MongoClient.connect(DATABASE_URL, (err, db: any) => {\n      if (err) throw err;\n      var dbo = db.db(\"Events\");\n      dbo.collection(table).insertOne(data, (err: any, res: any) => {\n        if (err) throw err;\n        resolve(res);\n        db.close();\n      });\n    });\n  });\n}\n\nfunction deleteEventData(id: string, table: string): Promise<string> {\n\treturn new Promise((reject, resolve) => {\n\t\tMongoClient.connect(DATABASE_URL, (err, db) => {\n\t\t  if (err) throw err;\n\t\t  let dbo = db.db(\"Events\")\n\t\t  let query = { _id: new ObjectId(id) }\n\t\t  dbo.collection(table).deleteOne(query, (err, obj) => {\n\t\t    if (err) throw err;\n\t\t\t\tresolve(\"1 document deleted\")\n\t\t    db.close()\n\t\t  });\n\t\t});\t\n\t})\n}\n\nconst app = express();\n\napp.set(\"view engine\", \"ejs\");\napp.use(expressLayouts);\n\napp.set(\"trust proxy\", 1); // trust first proxy\n\nconst server = require(\"http\").createServer(app);\nconst io = require(\"socket.io\")(server);\n\nconst token = \"6227ea2c7aabff48117758b7\";\n\ninterface Event {\n  title: string;\n  short_description: string;\n  description: string;\n  budget: number;\n  datetime: \"2022-03-11T19:44:58.419Z\";\n  location: \"Discord\";\n  cost: 10;\n  private: false;\n  contact?: {\n    email?: string;\n    twitter?: string;\n    discord?: string;\n    github?: string;\n  };\n}\n\nconst sessionMiddleware = session({\n  secret: \"keyboard cat\",\n  resave: true,\n  saveUninitialized: true,\n  cookie: { secure: true },\n});\napp.use(sessionMiddleware);\n\nio.use((socket: any, next: any) => sessionMiddleware(socket.request, {}, next));\n\nio.on(\"connection\", (socket: any) => {\n  socket.join(token);\n  console.log(\"New user: \" + socket.id);\n  socket.on(\"chat-message\", (data: any) => {\n    io.to(token).emit(\"chat-message\", data);\n  });\n\n  socket.on(\"add-menu\", async (data: any) => {\n    data.parent = new ObjectId(data.parent);\n\t\tdata.categories = data.categories.filter(String)\n    let res = await createEventData(data, \"Food\");\n    let d = {\n      ...data,\n      _id: res.insertedId.toString(),\n    };\n    console.log(d);\n    io.to(token).emit(\"add-menu-res\", d);\n  });\n\n\tsocket.on(\"delete-menu\", async (id: string) => {\n\t\ttry {\n\t    let res = await deleteEventData(id, \"Food\");\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t}\n    io.to(token).emit(\"delete-menu-res\", id);\n  });\n\n  socket.on(\"disconnect\", () => {\n    io.to(token).emit(\"chat-message\", {\n      user: {\n        name: \"Manu\",\n        email: \"manuthecoder@protonmail.com\",\n        image:\n          \"https://replit.com/cdn-cgi/image/width=1920,quality=80/https://storage.googleapis.com/replit/images/1615307601188_444d33267b0ab288b076f21da2abafc2.jpeg\",\n      },\n      event: \"6227ea2c7aabff48117758b7\",\n      msg: \"Manu has left the event\",\n      short: true,\n    });\n  });\n});\n\napp.use(async (req, res, next) => {\n  if (req.path.startsWith(\"/events/\")) {\n    res.render(\"event-page\", {\n      event: await eventInfo(req.path.replace(\"/events/\", \"\"), req),\n      layout: false,\n    });\n  }\n  next();\n});\n\napp.get([\"/\", \"/pages/event-website\"], async (req: any, res: any) => {\n  res.render(\n    req.path == \"/pages/event-website\" ? \"pages/event-website\" : \"index\",\n    {\n      event: await eventInfo(token, req),\n      layout: false,\n    }\n  );\n});\n\napp.get(\"/pages/overview\", async (req: any, res: any) => {\n  res.render(\"pages/overview\", {\n    event: await eventInfo(token, req),\n    layout: false,\n  });\n});\n\napp.get(\"/pages/menu\", async (req: any, res: any) => {\n  res.render(\"pages/menu\", {\n    data: await eventData(token, \"Food\"),\n    layout: false,\n  });\n});\n\napp.get(\"/pages/attendees\", async (req: any, res: any) => {\n  res.render(\"pages/attendees\", {\n    data: await eventData(token, \"Attendees\"),\n    layout: false,\n  });\n});\n\napp.use(express.static(\"src\"));\n\napp.get(\"/js/app.js\", (req, res) => {\n  res.sendFile(__dirname + \"/src/js/app.js\");\n});\n\napp.get(\"/dist/build.css\", (req, res) => {\n  res.sendFile(\"/home/runner/Events5/dist/output.css\");\n});\n\nconst port = process.env.PORT ?? 443;\nserver.listen(port, () =>\n  console.log({\n    message: \"Smartlist collaborate is UP\",\n    product: \"Smartlist Collaborate\",\n    status: \"UP\",\n    timestamp: new Date(),\n  })\n);\n"],
  "mappings": "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",
  "names": []
}
