{
  "version": 3,
  "sources": ["../../../src/js/ripple.js"],
  "sourcesContent": ["/**\n * Initialize ripple effects with the elements `.material-ripple:not(.ripple-ready), .fc-button:not(.ripple-ready), .fc-event:not(.ripple-ready)`\n */\nconst Ripple = {\n   init: _ => {\n      const buttons = document.querySelectorAll('.material-ripple:not(.ripple-ready), .fc-button:not(.ripple-ready), .fc-event:not(.ripple-ready)')\n      const stopEvents = [\"pointerup\", \"mouseleave\", \"dragleave\", \"touchmove\", \"touchend\", \"touchcancel\"];\n      let id;\n\n      function findFurthestPoint(clickPointX, elementWidth, offsetX, clickPointY, elementHeight, offsetY) {\n         let x = clickPointX - offsetX > elementWidth / 2 ? 0 : elementWidth;\n         let y = clickPointY - offsetY > elementHeight / 2 ? 0 : elementHeight;\n         let d = Math.hypot(x - (clickPointX - offsetX), y - (clickPointY - offsetY));\n         return d;\n      }\n\n      buttons.forEach(button => {\n         button.classList.add('ripple-ready');\n         button.addEventListener('pointerdown', e => {\n            const rect = button.getBoundingClientRect()\n            const radius = findFurthestPoint(e.clientX, button.offsetWidth, rect.left, e.clientY, button.offsetHeight, rect.top)\n\n            id = \"__\" + (Math.random() + 1).toString(36).substring(7) + '-' + (Math.random() + 1).toString(36).substring(7);\n\n            const circle = document.createElement('div')\n            circle.classList.add('ripple')\n            circle.id = id\n\n            circle.style.left = `${e.clientX - rect.left - radius}px`\n            circle.style.top = `${e.clientY - rect.top - radius}px`\n            circle.style.width = circle.style.height = `${radius * 2}px`\n\n            button.appendChild(circle)\n         })\n\n         stopEvents.forEach(event => {\n            button.addEventListener(event, _ => {\n               const ripple = button.querySelector('.ripple#' + id)\n               if (ripple) {\n                  ripple.style.opacity = '0'\n                  setTimeout(_ => { ripple.remove }, 1000)\n               }\n            })\n         })\n      });\n   }\n};\nwindow.addEventListener(\"load\", Ripple.init)\ndocument.documentElement.addEventListener(\"DOMNodeInserted\", Ripple.init);"],
  "mappings": "AAGA,MAAM,SAAS;AAAA,EACZ,MAAM,OAAK;AACR,UAAM,UAAU,SAAS,iBAAiB;AAC1C,UAAM,aAAa,CAAC,aAAa,cAAc,aAAa,aAAa,YAAY;AACrF,QAAI;AAEJ,+BAA2B,aAAa,cAAc,SAAS,aAAa,eAAe,SAAS;AACjG,UAAI,IAAI,cAAc,UAAU,eAAe,IAAI,IAAI;AACvD,UAAI,IAAI,cAAc,UAAU,gBAAgB,IAAI,IAAI;AACxD,UAAI,IAAI,KAAK,MAAM,IAAK,eAAc,UAAU,IAAK,eAAc;AACnE,aAAO;AAAA;AAGV,YAAQ,QAAQ,YAAU;AACvB,aAAO,UAAU,IAAI;AACrB,aAAO,iBAAiB,eAAe,OAAK;AACzC,cAAM,OAAO,OAAO;AACpB,cAAM,SAAS,kBAAkB,EAAE,SAAS,OAAO,aAAa,KAAK,MAAM,EAAE,SAAS,OAAO,cAAc,KAAK;AAEhH,aAAK,OAAQ,MAAK,WAAW,GAAG,SAAS,IAAI,UAAU,KAAK,MAAO,MAAK,WAAW,GAAG,SAAS,IAAI,UAAU;AAE7G,cAAM,SAAS,SAAS,cAAc;AACtC,eAAO,UAAU,IAAI;AACrB,eAAO,KAAK;AAEZ,eAAO,MAAM,OAAO,GAAG,EAAE,UAAU,KAAK,OAAO;AAC/C,eAAO,MAAM,MAAM,GAAG,EAAE,UAAU,KAAK,MAAM;AAC7C,eAAO,MAAM,QAAQ,OAAO,MAAM,SAAS,GAAG,SAAS;AAEvD,eAAO,YAAY;AAAA;AAGtB,iBAAW,QAAQ,WAAS;AACzB,eAAO,iBAAiB,OAAO,QAAK;AACjC,gBAAM,SAAS,OAAO,cAAc,aAAa;AACjD,cAAI,QAAQ;AACT,mBAAO,MAAM,UAAU;AACvB,uBAAW,QAAK;AAAE,qBAAO;AAAA,eAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOrD,OAAO,iBAAiB,QAAQ,OAAO;AACvC,SAAS,gBAAgB,iBAAiB,mBAAmB,OAAO;",
  "names": []
}
